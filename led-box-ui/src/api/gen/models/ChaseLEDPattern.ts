/* tslint:disable */
/* eslint-disable */
/**
 * LED Box API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  ChaseLEDPatternAllOf,
  ChaseLEDPatternAllOfFromJSON,
  ChaseLEDPatternAllOfFromJSONTyped,
  ChaseLEDPatternAllOfToJSON,
  Color,
  ColorFromJSON,
  ColorFromJSONTyped,
  ColorToJSON,
  LEDPattern,
  LEDPatternFromJSON,
  LEDPatternFromJSONTyped,
  LEDPatternToJSON,
} from ".";

/**
 *
 * @export
 * @interface ChaseLEDPattern
 */
export interface ChaseLEDPattern extends LEDPattern {
  /**
   * Describes how many LED per second the chase will move
   * @type {number}
   * @memberof ChaseLEDPattern
   */
  chaseSpeed: number;
  /**
   * Describes how many of the strip's LED will be used for the chase. 0 = 1 LED, 0.99 = 99% of LED
   * @type {number}
   * @memberof ChaseLEDPattern
   */
  chaseLengthFactor: number;
  /**
   * Describes how many of the LED of one the chase create a gradient to the next and previous color. 0 = No gradient, 0.5 Half of the chase's LED create a gradient to the next and previous color
   * @type {number}
   * @memberof ChaseLEDPattern
   */
  chaseGradientLengthFactor: number;
  /**
   *
   * @type {Color}
   * @memberof ChaseLEDPattern
   */
  chaseForeground?: Color;
}

export function ChaseLEDPatternFromJSON(json: any): ChaseLEDPattern {
  return ChaseLEDPatternFromJSONTyped(json, false);
}

export function ChaseLEDPatternFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChaseLEDPattern {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    ...LEDPatternFromJSONTyped(json, ignoreDiscriminator),
    chaseSpeed: json["chaseSpeed"],
    chaseLengthFactor: json["chaseLengthFactor"],
    chaseGradientLengthFactor: json["chaseGradientLengthFactor"],
    chaseForeground: !exists(json, "chaseForeground") ? undefined : ColorFromJSON(json["chaseForeground"]),
  };
}

export function ChaseLEDPatternToJSON(value?: ChaseLEDPattern | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    ...LEDPatternToJSON(value),
    chaseSpeed: value.chaseSpeed,
    chaseLengthFactor: value.chaseLengthFactor,
    chaseGradientLengthFactor: value.chaseGradientLengthFactor,
    chaseForeground: ColorToJSON(value.chaseForeground),
  };
}
